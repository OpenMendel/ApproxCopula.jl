var documenterSearchIndex = {"docs":
[{"location":"#GLMCopula.jl","page":"Home","title":"GLMCopula.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"A flexible copula-like distribution for GLM","category":"page"},{"location":"#Package-Features","page":"Home","title":"Package Features","text":"","category":"section"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Download and install Julia. Within Julia, copy and paste the following: ","category":"page"},{"location":"","page":"Home","title":"Home","text":"using Pkg\npkg\"add https://github.com/sarah-ji/GLMCopula.jl\"","category":"page"},{"location":"","page":"Home","title":"Home","text":"This package supports Julia v1.6+.","category":"page"},{"location":"#Manual-Outline","page":"Home","title":"Manual Outline","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Pages = [\n    \"index.md\"\n    \"man/api.md\"\n]\nDepth = 2","category":"page"},{"location":"man/api/#API","page":"API","title":"API","text":"","category":"section"},{"location":"man/api/","page":"API","title":"API","text":"Documentation for GLMCopua.jl's functions.","category":"page"},{"location":"man/api/#Index","page":"API","title":"Index","text":"","category":"section"},{"location":"man/api/","page":"API","title":"API","text":"Pages = [\"api.md\"]","category":"page"},{"location":"man/api/#Functions","page":"API","title":"Functions","text":"","category":"section"},{"location":"man/api/","page":"API","title":"API","text":"fit!\ninit_β!","category":"page"},{"location":"man/api/#GLMCopula.fit!","page":"API","title":"GLMCopula.fit!","text":"fit!(gcm::GLMCopulaARModel)\n\nFit an GLMCopulaVCModel object by MLE using a nonlinear programming solver. Start point should be provided in gcm.β, gcm.ρ, gcm.σ2.\n\n\n\n\n\nfit!(gcm::GLMCopulaCSModel)\n\nFit an GLMCopulaCSModel object by MLE using a nonlinear programming solver. Start point should be provided in gcm.β, gcm.ρ, gcm.σ2.\n\n\n\n\n\nfit!(gcm::GaussianCopulaARModel)\n\nFit an GaussianCopulaARModel object by MLE using a nonlinear programming solver. Start point should be provided in gcm.β, gcm.τ, gcm.ρ, gcm.σ2.\n\n\n\n\n\nfit!(gcm::GLMCopulaVCModel, solver=Ipopt.IpoptSolver(print_level=5))\n\nFit an GLMCopulaVCModel object by MLE using a nonlinear programming solver. Start point should be provided in gcm.β, gcm.Σ, this is for Poisson and Bernoulli base with no additional parameters than the mean.\n\n\n\n\n\nfit!(gcm::NBCopulaVCModel, solver=Ipopt.IpoptSolver(print_level=5))\n\nFit an NBCopulaVCModel object by block MLE using a nonlinear programming solver. Start point should be provided in gcm.β, gcm.Σ, gcm.r. In our block updates, we fit 10 iterations of gcm.β, gcm.Σ using IPOPT, followed by 10 iterations of Newton on nuisance parameter gcm.r. Convergence is declared when difference of successive loglikelihood is less than tol.\n\n\n\n\n\nfit_quasi!(gcm::GaussianCopulaVCModel, solver=Ipopt.IpoptSolver(print_level=5))\n\nFit an GaussianCopulaVCModel object by MLE using a nonlinear programming solver. Start point should be provided in gcm.β, gcm.Σ, gcm.τ this is for Normal base.\n\n\n\n\n\n","category":"function"},{"location":"man/api/#Models","page":"API","title":"Models","text":"","category":"section"},{"location":"man/api/","page":"API","title":"API","text":"GLMCopulaVCModel","category":"page"},{"location":"man/api/#GLMCopula.GLMCopulaVCModel","page":"API","title":"GLMCopula.GLMCopulaVCModel","text":"GLMCopulaVCModel GLMCopulaVCModel(gcs) Gaussian copula variance component model, which contains a vector of GLMCopulaVCObs as data, model parameters, and working arrays.\n\n\n\n\n\n","category":"type"}]
}
